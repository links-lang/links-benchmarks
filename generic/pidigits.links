
typename LFT = (Int, Int, Int, Int);

// Convert LFT into String representation
fun toStr(m: LFT) {
  switch (m) {
    case (a, b, c, d) -> (
      "(" ^^ intToString(a) ^^ "," ^^ intToString(b) ^^ ","
       ^^ intToString (c) ^^ "," ^^ intToString(b) ^^ ")"
    ): String
  }
}


// Identity element with respect to `comp` function (i.e. matrix multiplication)
var unit = (1, 0, 0 ,1);

fun comp(m1: LFT, m2: LFT) {
  var (q, r, s, t) = m1
  var (u, v, w, x) = m2 
  (q*u+r*w, q*v+r*x,
   s*u+t*w, s*v+t*x) : LFT
}

var m1 = (1,2,3,4);
var res = toStr(comp(m1, unit));
print(res ^^ "\n")
